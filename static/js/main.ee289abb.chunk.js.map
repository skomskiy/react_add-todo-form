{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","ClassNames","undefined","TodoList","todos","map","App","combined","todosFromServer","usersFromServer","find","userServer","useState","newArr","setTodosFromServer","newTodoTitle","setNewTodoTitle","newId","setNewId","errorTitle","setErrorTitle","errorUser","setErrorUser","onSubmit","event","preventDefault","type","placeholder","value","onChange","e","target","disabled","selected","onClick","newTodo","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee289abb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import ClassNames from 'classnames';\n// import { TodoWithUser } from '../../types/TodoWithUser';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../types/TodoWithUser';\n\ntype Props = {\n  todo: TodoWithUser\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <li>\n    <article\n      data-id={todo.id}\n      className={ClassNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      {todo.user !== undefined && <UserInfo user={todo.user} />}\n    </article>\n  </li>\n);\n","import { TodoWithUser } from '../../types/TodoWithUser';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    <ul>\n      {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n    </ul>\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoWithUser } from './types/TodoWithUser';\n\nexport const App = () => {\n  const combined = todosFromServer.map(todo => {\n    const user = usersFromServer.find(\n      userServer => userServer.id === todo.userId,\n    );\n\n    return { ...todo, user };\n  });\n\n  const [newArr, setTodosFromServer] = useState([...combined]);\n  const [newTodoTitle, setNewTodoTitle] = useState('');\n  const [newId, setNewId] = useState(0);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handleAddTodo = () => {\n    if (newTodoTitle === '') {\n      setErrorTitle(true);\n    }\n\n    if (newId === 0) {\n      setErrorUser(true);\n    }\n\n    if (newTodoTitle === '' || newId === 0) {\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: todosFromServer.length + 1,\n      title: newTodoTitle,\n      completed: false,\n      userId: newId,\n      user: {\n        email: usersFromServer[newId - 1].email,\n        id: newId,\n        name: usersFromServer[newId - 1].name,\n        username: usersFromServer[newId - 1].username,\n      },\n    };\n\n    setTodosFromServer([...newArr, newTodo]);\n    setNewTodoTitle('');\n    setErrorTitle(false);\n    setErrorUser(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        onSubmit={event => {\n          event.preventDefault();\n        }}\n      >\n        <div className=\"field\">\n          <span>Title:</span>\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={newTodoTitle}\n            onChange={(e) => setNewTodoTitle(e.target.value)}\n          />\n          {(newTodoTitle === '' && errorTitle)\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <span>User:</span>\n          <select\n            data-cy=\"userSelect\"\n            id=\"mySelect\"\n            onChange={(e) => {\n              return (setNewId(+e.target.value), setErrorUser(false));\n            }}\n          >\n            <option value=\"0\" key=\"0\" disabled selected>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {(errorUser)\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleAddTodo}\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newArr} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}